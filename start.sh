#!/bin/bash

# Ask for API key
echo "================================================================="
echo "  Fundus Analyzer Setup"
echo "================================================================="
echo "You need a Google API key from https://makersuite.google.com/"
echo "This key allows the application to use Google's Gemini Pro Vision API."
echo ""
read -p "Please enter your Google API key: " API_KEY

if [ -z "$API_KEY" ]; then
  echo "Error: No API key provided. Exiting."
  exit 1
fi

# Update the .env file
echo "# Generated by start.sh
GOOGLE_API_KEY=$API_KEY" > .env

echo "API key has been set in .env file."
echo ""

USE_DOCKER=0
# Try to run with Python first
if command -v python3 &> /dev/null; then
  echo "Running with Python..."
  
  # Check Python version (we need 3.9 or 3.10)
  PY_VERSION=$(python3 -c 'import sys; print(f"{sys.version_info.major}.{sys.version_info.minor}")')
  if [[ "$PY_VERSION" == "3.9" || "$PY_VERSION" == "3.10" ]]; then
    echo "Python version $PY_VERSION is compatible."
    
    # Create virtual environment if it doesn't exist
    if [ ! -d "venv" ]; then
      echo "Creating Python virtual environment..."
      python3 -m venv venv
    fi
    
    echo "Activating virtual environment..."
    source venv/bin/activate
    
    echo "Installing dependencies..."
    if pip install -r requirements.txt; then
      echo "Starting application with Python..."
      echo "The application will be accessible at: http://localhost:8000"
      echo "Press Ctrl+C to stop the application."
      echo "================================================================="
      
      # Run the application
      exec uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    else
      echo "Failed to install dependencies with pip. Falling back to Docker."
      USE_DOCKER=1
    fi
  else
    echo "Python version $PY_VERSION is not compatible (need 3.9 or 3.10). Falling back to Docker."
    USE_DOCKER=1
  fi
else
  echo "Python 3 not found. Falling back to Docker."
  USE_DOCKER=1
fi

# Fall back to Docker if Python setup failed
if [ $USE_DOCKER -eq 1 ]; then
  # Check if Docker is running
  if ! docker info > /dev/null 2>&1; then
    echo "Error: Docker is not running. Please start Docker and try again."
    exit 1
  fi
  
  echo "Starting application with Docker..."
  echo "The application will be accessible at: http://localhost:8000"
  echo "Press Ctrl+C to stop the application."
  echo "================================================================="
  
  # Run with Docker
  exec docker-compose up --build
fi 